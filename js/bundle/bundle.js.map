{"version":3,"sources":["webpack:///webpack/bootstrap d2f8a146469a69d7a574","webpack:///./lib/mainScene.js","webpack:///./lib/stellar_objects/stellar_object.js","webpack:///./lib/helpers/mathHelper.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;;AAGA;AACA;;AAEA,yCAAwC,kBAAkB;AAC1D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;;;;;;AC7JA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,gBAAgB;;AAEjE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;;;;;;;ACnEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d2f8a146469a69d7a574","const StellarObject = require ('./stellar_objects/stellar_object.js');\nconst MathHelper = require ('./helpers/mathHelper.js');\n\n\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 10, 1000000000 );\n\nvar renderer = new THREE.WebGLRenderer({ antialias: true });\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst clock = new THREE.Clock();\n\nconst sun = new StellarObject(\n  695.7,\n  \"./textures/sun/sun_diffuse.jpg\",\n  scene\n)\n\nconst mercury = new StellarObject(\n  2.4397,\n  \"./textures/mercury/mercury_diffuse.jpg\",\n  sun.obj\n)\nmercury.addOrbit(0.3871, 0.20563, 3.38, 0.3075, sun, 0x616569);\n\nconst venus = new StellarObject(\n  6.052,\n  \"./textures/venus/venus_diffuse.jpg\",\n  sun.obj\n)\n\nvenus.addOrbit(0.7233, 0.0067, 3.86, 0.7184, sun, 0x8f8d77);\n\nconst earth = new StellarObject(\n  6.371,\n  \"./textures/earth/earth_diffuse.jpg\",\n  sun.obj\n)\n\nearth.addOrbit(1, 0.0167, 7.16, 0.9833, sun, 0x4d65a4);\nearth.obj.position.x = 1500;\n\nconst moon = new StellarObject(\n  1.7371,\n  \"./textures/moon/moon_diffuse.jpg\",\n  earth.obj\n)\nmoon.obj.position.x = 38.44; // correct value: 384.4\n\nconst mars = new StellarObject(\n  3.3895,\n  \"./textures/mars/mars_diffuse.jpg\",\n  sun.obj\n)\nmars.obj.position.x = 2000;\n\nmars.addOrbit(1.524 , 0.0934, 5.65, 1.3814, sun, 0x79260f);\n\n\nconst jupiter = new StellarObject(\n  69.911,\n  \"./textures/jupiter/jupiter_diffuse.jpg\",\n  sun.obj\n)\n\njupiter.addOrbit(5.2026, 0.048498, 6.09, 4.95029, sun, 0xd4b48d);\n\nconst saturn = new StellarObject(\n  58.262,\n  \"./textures/saturn/saturn_diffuse.jpg\",\n  sun.obj\n)\n\nsaturn.addRing(\n  (58.262 + 6.630),\n  (58.262 + 120.7),\n  \"./textures/saturn/saturn_ring_diffuse.jpg\",\n  \"./textures/saturn/saturn_ring_trans.jpg\"\n);\n\nsaturn.obj.position.x = 2750;\nsaturn.ring.rotation.x = -45;\n\nsaturn.addOrbit(9.5549, 0.05555, 5.51, 9.024, sun, 0xceaf58);\n\n\nconst uranus = new StellarObject(\n  25.362,\n  \"./textures/uranus/uranus_diffuse.jpg\",\n  sun.obj\n)\n\nuranus.addRing(\n  (25.362 + 26.840),\n  (25.362 + 103),\n  \"./textures/uranus/uranus_ring_diffuse.jpg\",\n  \"./textures/uranus/uranus_ring_trans.jpg\"\n);\n\nuranus.obj.position.x = 3000;\nuranus.ring.rotation.x = -45;\n\nuranus.addOrbit(19.2184, 0.04638, 6.48, 18.33, sun, 0xc2edee);\n\n\n\n\nconst neptune = new StellarObject(\n  24.622,\n  \"./textures/neptune/neptune_diffuse.jpg\",\n  sun.obj\n)\nneptune.obj.position.x = 3250;\n\nneptune.addOrbit(30.1104, 0.0094, 6.34, 29.81, sun, 0x3448ff);\n\nconst pluto = new StellarObject(\n  1.187,\n  \"./textures/pluto/pluto_diffuse.jpg\",\n  sun.obj\n)\npluto.obj.position.x = 3500;\n\npluto.addOrbit(39.48, 0.2488, 17.16, 29.659, sun, 0xc29a6d);\n\ncontrols = new THREE.OrbitControls(camera, renderer.domElement);\ncontrols.target = earth.obj.position;\ncamera.position = earth.position;\n\n\nwindow.MathHelper = MathHelper;\n\n//earthOrbit.rotateX(MathHelper.degToRad(90));\n// Create an event listener that resizes the renderer with the browser window.\nwindow.addEventListener('resize', function() {\n  var WIDTH = window.innerWidth,\n      HEIGHT = window.innerHeight;\n  renderer.setSize(WIDTH, HEIGHT);\n  camera.aspect = WIDTH / HEIGHT;\n  camera.updateProjectionMatrix();\n});\n\nlet time = clock.getElapsedTime();\nlet delta = clock.getDelta();\n\nvar render = function () {\n  time = clock.getElapsedTime();\n  delta = clock.getDelta();\n\n  requestAnimationFrame( render );\n\n\n  renderer.render(scene, camera);\n  controls.update();\n};\n\nrender();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mainScene.js\n// module id = 0\n// module chunks = 0","const MathHelper = require ('./../helpers/mathHelper.js');\n\nclass StellarObject {\n  constructor (size, tex_file, parent) {\n    this.obj = new THREE.Object3D();\n    this.addBody(size, tex_file);\n    parent.add(this.obj);\n  }\n\n  addBody (size, tex_file) {\n    let body = new THREE.Mesh(\n      new THREE.SphereGeometry(size, 64, 64),\n      new THREE.MeshBasicMaterial({\n        map: new THREE.TextureLoader().load(tex_file)\n      })\n    );\n    this.obj.add(body);\n  }\n\n  // Create an orbit. Takes the following parameters:\n  // semiMajorAxis: The semi major axis of the ellipse, measured in AU\n  // eccentricity: Used to calculate the semi minor axis\n  // inclination: Inclination of the orbits pane relative to the sun\n  // perihelion: Closest approach to the sun, measured in AU\n  // root: The object this orbit is attached to. Should be the sun\n  // color: The color the orbit is drawn in.\n  addOrbit (semiMajorAxis, eccentricity, inclination, perihelion, root, color = 0x44444) {\n    let semiMinorAxis = MathHelper.minorAxis(semiMajorAxis, eccentricity);\n    let ellipseCenterX =\n      root.obj.position.x - MathHelper.auToUnits((semiMajorAxis - perihelion));\n\n    var curve = new THREE.EllipseCurve(\n    \tellipseCenterX,  root.obj.position.y,\n    \tMathHelper.auToUnits(semiMajorAxis), MathHelper.auToUnits(semiMinorAxis),\n    \t0,  2 * Math.PI,  // aStartAngle, aEndAngle\n    \tfalse,            // aClockwise\n    \t0                 // aRotation\n    );\n\n    var path = new THREE.Path( curve.getPoints( 500 ) );\n    var geometry = path.createPointsGeometry( 500 );\n    var material = new THREE.LineBasicMaterial( { color : color } );\n\n    // Create the final object to add to the scene\n    var orbit = new THREE.Line( geometry, material );\n\n    // Rotate orbit by 90 deg to have it sit on the correct plane, then apply inclination\n    orbit.rotateX(MathHelper.degToRad(90 + inclination));\n\n    root.obj.add( orbit )\n  }\n\n  addRing (innerRadius, outerRadius, tex_file, alpha_map) {\n    let ringGeometry = new THREE.RingGeometry(innerRadius, outerRadius, 64)\n\n    this.ring = new THREE.Mesh(\n      ringGeometry,\n      new THREE.MeshBasicMaterial({\n        map: new THREE.TextureLoader().load(tex_file),\n        alphaMap: new THREE.TextureLoader().load(alpha_map),\n        transparent: true\n      })\n    )\n    this.obj.add(this.ring);\n  }\n}\n\nmodule.exports = StellarObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/stellar_objects/stellar_object.js\n// module id = 1\n// module chunks = 0","const degToRad = function (deg) {\n  return deg * (Math.PI / 180);\n}\n\nconst radToDeg = function (rad) {\n  return rad * (180 / Math.PI);\n}\n\nconst auToUnits = function (au) {\n  return au * 149597.8707;\n}\n\nconst minorAxis = function (majorAxis, eccentricity) {\n  return majorAxis * Math.sqrt(1 - Math.pow(eccentricity, 2));\n}\n\nmodule.exports = {\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  auToUnits: auToUnits,\n  minorAxis: minorAxis,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/helpers/mathHelper.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}